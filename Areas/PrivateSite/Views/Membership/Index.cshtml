@using ComputerDeviceShopping.Models;
@model ComputerDeviceShopping.Models.MemberLevel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/PrivateSite/Views/Shared/_Layout.cshtml";
    var memberLevelList = ViewData["MemberLevelList"] as List<MemberLevel>;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title fw-semibold mb-4">Thêm mã giảm giá</h5>
                    <div class="card">
                        <div class="card-body">
                            @using (Html.BeginForm("Insert", "Membership", FormMethod.Post))
                            {
                                <p style="color:green; display:none;" id="notification_update"></p>
                                <div class="mb-3">
                                    @Html.TextBoxFor(d=>d.MemberLevelId,new{Type="hidden"})
                                    <label class="form-label">Tên hạng</label>
                                    @Html.TextBoxFor(d => d.LevelName, new { placeholder = "Nhập vào tên hạn", required = "required", @class="form-control" })
                                </div>
                                <div class="row mb-3">
                                    <div class="col-6">
                                        <label class="form-label">Hạn mức tổng tiền cần đạt</label>
                                        @Html.TextBoxFor(d => d.Limit, new {Type="number", placeholder = "Hạng mức tiêu để đạt được hạng", required = "required", @class = "form-control" })
                                    </div>
                                    <div class="col-6">
                                        <label class="form-label">Giảm giá (tất cả sản phẩm)</label>
                                        @Html.TextBoxFor(d => d.LevelDiscount, new {Type="number", placeholder = "% Giảm giá đối với tất cả sản phẩm", required = "required", @class = "form-control" })
                                    </div>
                                </div>
                                <div class=" mb-3">
                                    <label class="form-label">Mô tả hạng thành viên</label>
                                    @Html.TextAreaFor(d => d.LevelDescription, new { @class = "form-control", placeholder = "Nhập vào mô tả hạng", id = "levelDescription" })
                                </div>
                                <button type="submit" class="btn btn-primary mt-2">Lưu</button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-12 d-flex align-items-stretch">
            <div class="card w-100">
                <div class="card-body p-4">
                    <div class="row">
                        <div class="col-lg-6 col-md-6">
                            <h5 class="card-title fw-600 mb-4">Danh sách hạng thành viên</h5>
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-post text-nowrap mb-0 align-middle">
                            <thead class="text-dark fs-4">
                                <tr>
                                    <th class="">
                                        <h6 class="fw-600 mb-0">ID</h6>
                                    </th>
                                    <th class="">
                                        <h6 class="fw-600 mb-0">Tên</h6>
                                    </th>
                                    <th class="">
                                        <h6 class="fw-600 mb-0">Hạn mức đạt được</h6>
                                    </th>
                                    <th>
                                        <h6 class="fw-600 mb-0">Giảm giá</h6>
                                    </th>
                                    <th class="">
                                        <h6 class="fw-600 mb-0">Lệnh</h6>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var item in memberLevelList)
                                {
                                    <tr>
                                        <td><h6 class="fw-600 mb-0">@item.MemberLevelId</h6></td>
                                        <td><h6 class="fw-600 mb-1">@item.LevelName</h6></td>
                                        <td><h6 class="fw-600 mb-1">@item.Limit</h6></td>
                                        <td><h6 class="fw-600 mb-1">@item.LevelDiscount</h6></td>
                                        <td>
                                            @using (Html.BeginForm("Update","Membership")){
                                                <button type="submit" class="btn btn-primary" >Sửa</button>
                                                <input type="hidden" name="id" value="@item.MemberLevelId"/>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-tools p-5 pt-0 pb-0 m-auto" id="pagination">
                    @{
                        int prevPage = ViewBag.Page - 1;
                        if (prevPage <= 0)
                        {
                            prevPage = 1;
                        }
                        int nextPage = ViewBag.Page + 1;
                        if (nextPage > ViewBag.NoOfPages)
                        {
                            nextPage = ViewBag.NoOfPages;
                        }
                    }
                    @if (memberLevelList.Count > 0)
                    {
                        <ul class="pagination pagination-sm">
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index","Membership",new {page=prevPage})">&laquo;</a></li>
                            @for (int i = ViewBag.DisplayPage; i < ViewBag.NoOfPages; i++)
                            {
                                if (i + 1 == ViewBag.Page)
                                {
                                    <li class="page-item"><a href="@Url.Action("Index","Membership",new {page = i+1 })" class="active page-link">@(i + 1)</a></li>
                                }
                                else
                                {
                                    <li class="page-item"><a href="@Url.Action("Index","Membership",new {page = i+1 })" class="page-link">@(i + 1)</a></li>
                                }
                            }
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index","Membership",new {page=nextPage})">&raquo;</a></li>
                        </ul>
                    }
                    else
                    {
                        <h1 class="text-center">Danh sách rỗng</h1>
                    }
                </div>
            </div>
        </div>

    </div>
</div>
<script src="https://cdn.tiny.cloud/1/b74ahe4e18x18qxt2o4w63leenr4w5976k1r1wk915ugvr97/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>
<script>
    tinymce.init({
        selector: '#levelDescription',
        plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage advtemplate mentions tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss markdown',
        toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
        tinycomments_mode: 'embedded',
        tinycomments_author: 'Author name',
    });

    // document.addEventListener("DOMContentLoaded", function () {
    //     Swal.fire({
    //         title: "LƯU Ý !",
    //         text: "Hạng thành viên bạn chỉ được sửa ",
    //         icon: "info"
    //     });
    // });
    function Update(id) {
        fetch(`/api/membership/update/${id}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    // document.getElementById('levelName').value = data.data.levelName;
                    // document.getElementById('levelDescription').value = data.data.levelDescription;
                    // document.getElementById('levelDiscount').value = data.data.levelDiscount;
                    // document.getElementById('limit').value = data.data.limit;
                } else {
                    alert('Update failed');
                }
            })
            .catch(error => {
                alert("Error");
            });
    }
</script>

