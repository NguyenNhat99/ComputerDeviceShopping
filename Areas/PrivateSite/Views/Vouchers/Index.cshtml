@using ComputerDeviceShopping.Models;
@model ComputerDeviceShopping.Models.Voucher
@{
    ViewData["Title"] = "Thêm khuyến mãi";
    var vouchers = ViewData["Vouchers"] as List<Voucher>;
    string notification = ViewBag.updateItem;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title fw-semibold mb-4">Thêm mã giảm giá</h5>
                    <div class="card">
                        <div class="card-body">
                            @using (Html.BeginForm("Insert", "Vouchers", FormMethod.Post))
                            {
                                 <p style="color:green; display:none;" id="notification_update"></p>
                                <div class="mb-3">
                                    <input  type="hidden" id="voucherId" name="VoucherId"/>
                                    <label for="voucherCode" class="form-label">Mã code</label>
                                    <div class="input-group">
                                        <input class="form-control" placeholder="Nhập mã code voucher" type="text" name="VoucherCode" id="voucherCode" required />
                                        <button type="button" class="btn btn-warning" onclick='RandomCode("voucherCode")' id="btnGenerator">Tạo tự động</button>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Số phần trăm giảm (%)</label>
                                    <input type="number" class="form-control" placeholder="Số % giảm của voucher" name="Discount" id="discount" required />
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Số lần áp dụng</label>
                                    <input type="number" class="form-control" placeholder="Số lần áp dụng voucher" name="NumberOfTimesEXE" id="NumberOfTimesEXE" required />
                                </div>
                                <div class="row mb-3">
                                    <div class="col-6">
                                        <label class="form-label">Thời gian tạo</label>
                                        <input type="text" value="@DateTime.Now" class="form-control" id="createAt" disabled />
                                    </div>
                                    <div class="col-6">
                                        <label class="form-label">Thời gian hết hạn</label>
                                        <input type="datetime-local" class="form-control" name="EndAt" id="endAt" required />
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-primary mt-2">Lưu</button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-12 d-flex align-items-stretch">
            <div class="card w-100">
                <div class="card-body p-4">
                    <div class="row">
                        <div class="col-lg-6 col-md-6">
                            <h5 class="card-title fw-600 mb-4">Danh sách bài viết</h5>
                        </div>
                        <div class="col-lg-6 col-md-6">
                            @using (Html.BeginForm("Index", "Vouchers", FormMethod.Post))
                            {
                                <div class="searchForm">
                                    <input class="form-control" name="name" placeholder="Tìm kiếm ..." />
                                    <button type="submit" class="btn btn-default"><i class="ti ti-search"></i></button>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-post text-nowrap mb-0 align-middle">
                            <thead class="text-dark fs-4">
                                <tr>
                                    <th class="">
                                        <h6 class="fw-600 mb-0">ID</h6>
                                    </th>
                                    <th class="">
                                        <h6 class="fw-600 mb-0">Mã khuyến mãi</h6>
                                    </th>
                                    <th class="">
                                        <h6 class="fw-600 mb-0">Thời gian tạo</h6>
                                    </th>
                                    <th>
                                        <h6 class="fw-600 mb-0">Thời gian hết hạn</h6>
                                    </th>
                                    <th>
                                        <h6 class="fw-600 mb-0">Giảm giá (%)</h6>
                                    </th>
                                    <th>
                                        <h6 class="fw-600 mb-0">Số lần dùng</h6>
                                    </th>
                                    <th class="">
                                        <h6 class="fw-600 mb-0">Lệnh</h6>
                                    </th>
                                    <th>
                                        <h6 class="fw-600 mb-0">Trạng thái</h6>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var item in vouchers)
                                {
                                    <tr>
                                        <td><h6 class="fw-600 mb-0">@item.VoucherId</h6></td>
                                        <td><h6 class="fw-600 mb-1">@item.VoucherCode</h6></td>
                                        <td><h6 class="fw-600 mb-1">@item.CreateAt</h6></td>
                                        <td><h6 class="fw-600 mb-1">@item.EndAt</h6></td>
                                        <td><h6 class="fw-600 mb-1">@item.Discount</h6></td>
                                        <td><h6 class="fw-600 mb-1">@item.NumberOfTimesEXE</h6></td>
                                        <td>
                                            <button type="button" class="btn btn-primary" onclick="Update1(@item.VoucherId)">Sửa</button>
                                           @*  <a href="@Url.Action("Update","Vouchers",new{id=item.VoucherId})" class="btn btn-primary">Sửa</a> *@
                                            <button class="btn @(item.VoucherStatus == true ? "btn-default" :"btn-warning")" onclick='Active(@item.VoucherId,"vouchers")'>@(item.VoucherStatus == true ? "Ngừng" : "Hoạt động")</button>
                                            <button class="btn btn-danger" onclick='Delete(@item.VoucherId,"vouchers")'>Xóa</button>
                                        </td>
                                        <td>
                                            <div class="d-flex align-items-center gap-2">
                                                <span class="badge @(item.VoucherStatus == true ? "bg-success" : "bg-danger") rounded-3 fw-600">@(item.VoucherStatus == true ? "Hoạt động" : "Ngừng")</span>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-tools p-5 pt-0 pb-0 m-auto" id="pagination">
                    @{
                        int prevPage = ViewBag.Page - 1;
                        if (prevPage <= 0)
                        {
                            prevPage = 1;
                        }
                        int nextPage = ViewBag.Page + 1;
                        if (nextPage > ViewBag.NoOfPages)
                        {
                            nextPage = ViewBag.NoOfPages;
                        }
                    }
                    @if (vouchers.Count > 0)
                    {
                        <ul class="pagination pagination-sm">
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index","Vouchers",new {page=prevPage})">&laquo;</a></li>
                            @for (int i = ViewBag.DisplayPage; i < ViewBag.NoOfPages; i++)
                            {
                                if (i + 1 == ViewBag.Page)
                                {
                                    <li class="page-item"><a href="@Url.Action("Index","Vouchers",new {page = i+1 })" class="active page-link">@(i + 1)</a></li>
                                }
                                else
                                {
                                    <li class="page-item"><a href="@Url.Action("Index","Vouchers",new {page = i+1 })" class="page-link">@(i + 1)</a></li>
                                }
                            }
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index","Vouchers",new {page=nextPage})">&raquo;</a></li>
                        </ul>
                    }
                    else
                    {
                        <h1 class="text-center">Sản phẩm này hiện tại đã hết hàng</h1>
                    }
                </div>
            </div>
        </div>
       
    </div>
</div>
<script>
    function Update1(id) {
        fetch(`/api/vouchers/update/${id}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
                console.log(data.data)
            if (data.success) {
                    document.getElementById('voucherId').value = data.data.voucherId;
                    document.getElementById('discount').value = data.data.discount;
                    document.getElementById('voucherCode').value = data.data.voucherCode;
                    document.getElementById('createAt').value = data.data.ca;
                    document.getElementById('endAt').value = data.data.endAt;
                    
                    var notificationUpdate = document.getElementById('notification_update');
                    notificationUpdate.style.display = 'block';
                    notificationUpdate.innerText = "Đang sửa mã: " + id;
            } else {
                alert('Update failed');
            }
        })
        .catch(error => {
            alert("Error");
        });
    }

    function RandomCode(idElement) {
        fetch(`/api/vouchers/randomcode`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            document.getElementById(idElement).value = data.code;
        })
        .catch(error => {
            alert("Error")
        });
    }


    
</script>

