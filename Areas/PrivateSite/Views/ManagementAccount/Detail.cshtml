@using ComputerDeviceShopping.Models;
@model ComputerDeviceShopping.Models.Account
@{
    ViewData["Title"] = "Detail";
    Layout = "~/Areas/PrivateSite/Views/Shared/_Layout.cshtml";

}

<div class="content-wrapper">
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6" style="margin-top:90px;">
                    <h1>Chi tiết tài khoản @Model.Username</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href=''>Dashboard</a></li>
                        <li class="breadcrumb-item active">Thông tin</li>
                    </ol>
                </div>
            </div>
        </div>
    </section>
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-3">
                    <div class="card card-primary card-outline">
                        <div class="card-body box-profile">
                            <div class="text-center">
                                <img class="profile-user-img img-fluid img-circle"
                                     src="~/images/profile/user-1.jpg"
                                     alt="User profile picture" style="border-radius: 10%;" />
                            </div>
                            <h3 class="profile-username text-center">@Model.LastName @Model.FirstName</h3>
                            <ul class="list-group list-group-unbordered mb-3">
                                <li class="list-group-item">
                                    <b>Nhóm tài khoản: </b><a class="float-right text-decoration-none c-black">@ViewBag.GroupName</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-md-9">
                    <div class="card">
                        <div class="card-header p-2">
                            <ul class="nav nav-tabs" id="myTab" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home" type="button" role="tab" aria-controls="home" aria-selected="true">Thông tin</button>
                                </li>
                            </ul>
                        </div>
                        <div class="card-body">
                            <div class="tab-content" id="myTabContent">
                                <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                                    <div class="form-group row mb-3">
                                        <label class="col-sm-2 col-form-label">Tên đăng nhập</label>
                                        <div class="col-sm-10">
                                            <input type="text" class="form-control" value="@Model.Username" disabled>
                                        </div>
                                    </div>
                                    <div class="form-group row mb-3">
                                        <label class="col-sm-2 col-form-label">Email</label>
                                        <div class="col-sm-10">
                                            <input type="text" class="form-control" value="@Model.Email" disabled>
                                        </div>
                                    </div>
                                    <div class="form-group row mb-3">
                                        <label class="col-sm-2 col-form-label">Thời gian tạo</label>
                                        <div class="col-sm-10">
                                            <input type="text" class="form-control" value="@Model.CreateAt" disabled>
                                        </div>
                                    </div>
                                    <form>
                                        <input type="hidden" name="UserId" value="@Model.UserId" />
                                        <div class="form-group row mb-3">
                                            <label class="col-sm-2 col-form-label">Số điện thoại</label>
                                            <div class="col-sm-10">
                                                <input type="text" class="form-control" id="Mobile" name="Phone" value="@Model.Phone" required>
                                            </div>
                                        </div>
                                        <div class="form-group row mb-3">
                                            <label class="col-sm-2 col-form-label">Họ</label>
                                            <div class="col-sm-10">
                                                <input type="text" class="form-control" id="LastName" name="LastName" value="@Model.LastName" required>
                                            </div>
                                        </div>
                                        <div class="form-group row mb-3">
                                            <label class="col-sm-2 col-form-label">Tên</label>
                                            <div class="col-sm-10">
                                                <input type="text" class="form-control" id="FirstName" name="FirstName" value="@Model.FirstName" required>
                                            </div>
                                        </div>
                                        <div class="form-group row mb-3">
                                            <label class="col-sm-2 col-form-label">Địa chỉ</label>
                                            <div class="col-sm-10">
                                                <input type="text" class="form-control" id="FirstName" name="DeliverAddress" value="@Model.DeliverAddress" required>
                                            </div>
                                        </div>
                                        <div class="form-group row mb-3">
                                            <label class="col-sm-2 col-form-label">Giới tính</label>
                                            <div class="col-sm-10">
                                                <select class="form-control" name="Gender">
                                                    <option value="true" @(Model.Gender == true ? "selected" : "")>Nam</option>
                                                    <option value="false" @(Model.Gender == false ? "selected" : "")>Nữ</option>
                                                </select>
                                            </div>
                                        </div>
                                    </form>
                                    <button class="btn btn-warning" onclick="ResetPassword(@Model.UserId)">Reset mật khẩu</button>
                                    <button class="btn btn-primary" onclick="ChangePermisstion(@Model.UserId,@Model.GroupId)">Quyền hạn</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
<script>
    function ResetPassword(id) {
        Swal.fire({
            title: "Bạn chắc chắn?",
            text: "Mật khẩu mới sẽ gửi về Email đã đăng ký tài khoản.",
            icon: "warning",
            showCancelButton: true,
            cancelButtonColor: "#d33",
            cancelButtonText: "Đóng",
            confirmButtonColor: "#3085d6",
            confirmButtonText: "Xác nhận"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/api/managementaccount/resetpassword/${id}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                position: "center-center",
                                icon: "success",
                                title: response.message,
                                showConfirmButton: true,
                                timer: 1500
                            }).then((result) => {
                                if (result.dismiss === Swal.DismissReason.timer || result.isConfirmed) {
                                    location.reload(true);
                                }
                            });
                        } else {
                            alert("Error")
                        }
                    })
                    .catch(error => {
                        alert("Error")
                    });
            }
        });
    }
    async function ChangePermisstion(idAccount, permissionCurrent) {
        const { value: newStatus } = await Swal.fire({
            title: "Thay đổi trạng thái tài khoản",
            input: "select",
            inputOptions: {
                1: "Quản trị",
                2: "Nhân viên",
                3: "Người dùng"
            },
            inputPlaceholder: "Chọn quyền hạn tài khoản",
            showCancelButton: true,
            inputValidator: async (value) => {
                if (value == permissionCurrent) {
                    return "Hãy chọn quyền khác";
                } else {
                    return Change(idAccount, value);
                }
            }
        });
    }
    function Change(id, newPermission) {
        fetch(`/api/managementaccount/changepermisstion/${id}&${newPermission}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => response.json())
            .then(data => {
                console.log(data.success);
                if (data.success == true) {
                    Swal.fire({
                        position: "center-center",
                        icon: "success",
                        title: data.message,
                        showConfirmButton: true,
                        timer: 1500
                    }).then((result) => {
                        if (result.dismiss === Swal.DismissReason.timer || result.isConfirmed) {
                            location.reload(true);
                        }
                    });
                } else {
                    alert("Error")
                }
            })
            .catch(error => {
                alert("Error")
            });
    }
</script>
