@using ComputerDeviceShopping.Models;
@{
    ViewData["Title"] = "Index";
    var accountList = ViewData["Accounts"] as List<Account>;
    string notification = ViewBag.updateItem;
}
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 d-flex align-items-stretch">
            <div class="card w-100">
                <div class="card-body p-4">
                    <div class="row">
                        <div class="col-lg-6 col-md-6">
                            <h5 class="card-title fw-600 mb-4">Danh sách tài khoản</h5>
                        </div>
                        <div class="col-lg-6 col-md-6">
                            @using (Html.BeginForm("Index", "ManagementAccount", FormMethod.Post))
                            {
                                <div class="searchForm">
                                    <input class="form-control" name="name" placeholder="Tìm kiếm ..." />
                                    <button type="submit" class="btn btn-default"><i class="ti ti-search"></i></button>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-post text-nowrap mb-0 align-middle">
                            <thead class="text-dark fs-4">
                                <tr>
                                    <th class=""><h6 class="fw-600 mb-0"></h6></th>
                                    <th class=""><h6 class="fw-600 mb-0">ID</h6> </th>
                                    <th class=""><h6 class="fw-600 mb-0">Username</h6></th>
                                    <th class=""><h6 class="fw-600 mb-0">Email</h6></th>
                                    <th class=""><h6 class="fw-600 mb-0">Số điện thoại</h6> </th>
                                    <th class=""><h6 class="fw-600 mb-0">Lệnh</h6></th>
                                    <th class=""><h6 class="fw-600 mb-0">Trạng thái</h6></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in accountList)
                                {
                                    <tr>
                                        <td><input type="checkbox" id="@item.UserId" onchange="CheckedAccount(@item.UserId)" /></td>
                                        <td><h6 class="fw-600 mb-0">@item.UserId</h6></td>
                                        <td><h6 class="fw-600 mb-1">@item.Username</h6></td>
                                        <td><h6 class="fw-600 mb-1">@item.Email</h6></td>
                                        <td><h6 class="fw-600 mb-1">@item.Phone</h6></td>
                                        <td><h6 class="fw-600 mb-1">@ViewBag.GroupNameAccount</h6></td>
                                        <td>
                                            <a href="@Url.Action("Detail","ManagementAccount",new{id=item.UserId})" class="btn btn-primary">Chi tiết</a>
                                            <button class="btn @(item.UserStatus == true ? "btn-default" :"btn-warning")" onclick='Active(@item.UserId,"managementaccount")'>@(item.UserStatus == true ? "Khóa" : "Hoạt động")</button>
                                            <button class="btn btn-danger" onclick='Delete(@item.UserId,"managementaccount")'>Xóa</button>
                                        </td>
                                        <td>
                                            <div class="d-flex align-items-center gap-2">
                                                <span class="badge @(item.UserStatus == true ? "bg-success" : "bg-danger") rounded-3 fw-600">@(item.UserStatus == true ? "Hoạt động" : "Khóa")</span>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-tools p-5 pt-0 pb-0 m-auto" id="pagination">
                    @{
                        int prevPage = ViewBag.Page - 1;
                        if (prevPage <= 0)
                        {
                            prevPage = 1;
                        }
                        int nextPage = ViewBag.Page + 1;
                        if (nextPage > ViewBag.NoOfPages)
                        {
                            nextPage = ViewBag.NoOfPages;
                        }
                    }
                    @if (accountList.Count > 0)
                    {
                        <ul class="pagination pagination-sm">
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index","ManagementAccount",new {page=prevPage})">&laquo;</a></li>
                            @for (int i = ViewBag.DisplayPage; i < ViewBag.NoOfPages; i++)
                            {
                                if (i + 1 == ViewBag.Page)
                                {
                                    <li class="page-item"><a href="@Url.Action("Index","ManagementAccount",new {page = i+1 })" class="active page-link">@(i + 1)</a></li>
                                }
                                else
                                {
                                    <li class="page-item"><a href="@Url.Action("Index","ManagementAccount",new {page = i+1 })" class="page-link">@(i + 1)</a></li>
                                }
                            }
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index","ManagementAccount",new {page=nextPage})">&raquo;</a></li>
                        </ul>
                    }
                    else
                    {
                        <h1 class="text-center">Hiện tại không có tài khoản nào</h1>
                    }
                </div>
                <div class="group_" style="display:inline-block;">
                    <button class="btn btn-success" onclick="SendNotification()">Gửi thông báo</button>
                    <button class="btn btn-danger" onclick="MultiBlock()">Khóa tài khoản</button>
                    <button class="btn btn-secondary" onclick="MultiActive()">Mở khóa tài khoản</button>
                </div>
            </div>
        </div>
    </div>
    <div class="card" id="cardSendNotification" style="display:none;">
        <div class="card-body">
            <h5 class="card-title fw-semibold mb-4">Gửi thông báo qua mail</h5>
            <div class="card">
                <div class="card-body">
                    @using (Html.BeginForm("SendMail", "ManagementAccount", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <div class="mb-3">
                            <label class="form-label">Tiêu đề</label>
                            <input class="form-control" name="subject" required />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Nội dung </label>
                            <textarea class="form-control" required name="content"></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Các mail nhận (<span style="color:red;">Click vào thẻ để xóa</span>)</label>
                            <div class="main_tab" id="loadDataMail" style="margin-left: 2px;"></div>
                        </div>
                        <button type="submit" class="btn btn-primary mt-2">Gửi</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    let checkedAccounts = [];
    function MultiActive(){
        fetch(`/api/managementaccount/multiactive/${checkedAccounts}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Thành công");
                    location.reload(true);
                } else {
                    alert("Thất bại");
                }
            })
            .catch(error => {
                console.error('Error');
            });
    }
    function MultiBlock(){
        fetch(`/api/managementaccount/multiblock/${checkedAccounts}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Thành công");
                    location.reload(true);
                } else {
                    alert("Thất bại");
                }
            })
            .catch(error => {
                console.error('Error');
            });
    }
    function CheckedAccount(id) {
        var index = checkedAccounts.indexOf(id);
        if (index > -1) {
            checkedAccounts.splice(index, 1);
        } else {
            checkedAccounts.push(id);
        }
    }
    function SendNotification() {
        if (checkedAccounts.length > 0) {
            fetch(`/api/managementaccount/sendnotification/${checkedAccounts}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response =>  response.json())
                .then(data => {
                    if (data.success) {
                        var cardSN = document.getElementById('cardSendNotification');
                        cardSN.style.display = "block";

                        var displaymail = document.getElementById('loadDataMail');
                        displaymail.innerHTML = '';
                        
                        data.data.$values.forEach(item => {
                            displaymail.innerHTML += ` <a href="#" > <span class="tag tag-firebase tag-lg" >${item}</span></a >`;
                        });
                    } else {
                        alert("Lỗi khi gửi thông báo");
                    }
                })
                .catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                });
        } else {
            alert("Vui lòng chọn ít nhất một tài khoản.");
            location.reload(true);
        }
    }
</script>


